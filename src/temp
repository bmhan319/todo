 To do
1) Light Mode
2) Filters






handleChange = (event) => {
  this.setState({
    input: event.target.value
  })
}

handleSubmit = (event) => {
  event.preventDefault()
  this.setState({
    list: [...this.state.list, this.state.input]
  })
  document.getElementById('listInput').value = ""
}

close = (num) => {
  let array = [...this.state.list]
  array.splice(num, 1)
  this.setState({
    list: array
  })
}

complete = (num) => {
  if (document.querySelector('.listItem' + num).dataset.status === 'notDone') {
    document.querySelector('.listItemPath' + num).classList.remove('strokeOff')
    document.querySelector('.listItemPath').classList.add('strokeOn')
    document.querySelector('.listItem' + num).dataset.status = 'done'
    document.querySelector('.listComplete' + num).classList.add('listComplete')
    document.querySelector('.listItemSubject' + num).style.textDecoration = 'line-through'

    document.querySelector('.listItemSubject' + num).style.color = 'var(--LT_DarkGray)'
  } else if (document.querySelector('.listItem' + num).dataset.status === 'done') {
    document.querySelector('.listItemPath' + num).classList.remove('strokeOn')
    document.querySelector('.listItemPath' + num).classList.add('strokeOff')
    document.querySelector('.listItem' + num).dataset.status = 'notDone'
    document.querySelector('.listComplete' + num).classList.remove('listComplete')
    document.querySelector('.listItemSubject' + num).style.textDecoration = 'none'

    document.querySelector('.listItemSubject' + num).style.color = 'var(--DT_LightGray)'
  }
  
  
}

changeMode = (num) => {
  this.setState({
    modeCount: this.state.modeCount + num
  })
  if(this.state.modeCount % 2 !== 0) {
    document.querySelector('.listMode').classList.remove('nightIcon')
    document.querySelector('.listMode').classList.add('dayIcon')
    document.querySelector('.headerContainer').classList.remove('headerDay')
    document.querySelector('.headerContainer').classList.add('headerNight')
    document.querySelector('.App').classList.remove('bgDayMode')
    document.querySelector('.App').classList.add('bgNightMode')
    
    document.querySelectorAll('.tailText').forEach( item => {
      item.classList.remove('tailTextDay')
      item.classList.add('tailTextNight')
     } )
    document.querySelectorAll('.listBg').forEach( item => {
      item.classList.remove('listBgDay')
      item.classList.add('listBgNight')
     } )
    document.querySelectorAll('.listText').forEach( item => {
    item.classList.remove('listTextDay')
    item.classList.add('listTextNight')
    } )
    document.querySelectorAll('.listCheckDesign').forEach( item => {
      item.classList.remove('listDesignDay')
      item.classList.add('listDesignNight') 
    } )
    document.querySelectorAll('.listItem').forEach( item => {
      item.classList.remove('listBorderDay')
      item.classList.add('listBorderNight') 
    } )
    document.querySelectorAll('.tailItemText').forEach( item => {
      item.classList.remove('tailItemTextDay')
      item.classList.add('tailItemTextNight') 
    } )
  } else {
    document.querySelector('.listMode').classList.remove('dayIcon')
    document.querySelector('.listMode').classList.add('nightIcon')
    document.querySelector('.headerContainer').classList.remove('headerNight')
    document.querySelector('.headerContainer').classList.add('headerDay')
    document.querySelector('.App').classList.remove('bgNightMode')
    document.querySelector('.App').classList.add('bgDayMode')
    
    document.querySelectorAll('.tailText').forEach( item => {
      item.classList.remove('tailTextNight')
      item.classList.add('tailTextDay')
    } )
    document.querySelectorAll('.listBg').forEach( item => {
      item.classList.remove('listBgNight')
      item.classList.add('listBgDay')
    } )
    document.querySelectorAll('.listText').forEach( item => {
      item.classList.remove('listTextNight')
      item.classList.add('listTextDay') 
    } )
    document.querySelectorAll('.listCheckDesign').forEach( item => {
      item.classList.remove('listDesignNight')
      item.classList.add('listDesignDay') 
    } )
    document.querySelectorAll('.listItem').forEach( item => {
      item.classList.remove('listBorderNight')
      item.classList.add('listBorderDay') 
    } )
    document.querySelectorAll('.tailItemText').forEach( item => {
      item.classList.remove('tailItemTextNight')
      item.classList.add('tailItemTextDay') 
    } )
  }
}





{ this.props.state.list.map( (item,ind) => (
  <li key={ind + item} className={`listItem listBorderNight listItem${ind}`} data-status='notDone' >
    <button className={`listCheckDesign listDesignNight listItemComplete listComplete${ind}`} type="button" onClick={ ()=>{this.props.complete(ind)} } >
      <svg className="listItemCheck" xmlns="http://www.w3.org/2000/svg" width="11" height="9">
        <path className={`strokeOff listItemPath listItemPath${ind}`} fill="none" stroke="#FFF" strokeWidth="2" d="M1 4.304L3.696 7l6-6"/>
      </svg>
    </button>
    <p className={`listItemSubject listItemSubject${ind} listText listTextNight`} >{item}</p>
    <div className="closeIcon" onClick={ ()=>{this.props.close(ind)} } ></div>
  </li>
) ) }